library(tm)
install.packages('wordcloud')
library(wordcloud)
install.packages('RColorBrewer')
install.packages("RColorBrewer")
library(RColorBrewer)
library(wordcloud)
library(readxl)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
df <- tm_map(df, content_transformer(tolower))
corpus <- Corpus(VectorSource((df$coursecontent)))
df <- tm_map(corpus, content_transformer(tolower))
df <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus
corpus[[1][1]]
corpus[[1]]
corpus[[1]][1]
corpus[[1]][3]
corpus[[1]][2]
corpus[[2]][1]
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, removeWords, c("get", "told", "gave", "took", "get", "can", "the"))
corpus[[1]][1]
tdm <- TermDocumentMatrix(corpus)
m <- as.matrix(tdm)
v <- sort(rowSums(m), decreasing = TRUE)
d <- data.frame(word = names(v), freq = v)
d
wordcloud(d$word, d$freq, random.order = FALSE, rot.per=0.3, scale=c(4,.5), max.words = 101, colors = brewer.pal(8, "Dark2"))
title(main= "Word Cloud - Student Reviews")
title(main= "Word Cloud - Student Reviews", font.main = 1, cex.main = 1.5)
library(readxl)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
df <- read_excel('student-review.xlsx')
corpus <- Corpus(VectorSource((df$coursecontent)))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("english"))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, removeWords, c("get", "told", "gave", "took", "get", "can", "the"))
tdm <- TermDocumentMatrix(corpus)
m <- as.matrix(tdm)
v <- sort(rowSums(m), decreasing = TRUE)
d <- data.frame(word = names(v), freq = v)
wordcloud(d$word, d$freq, random.order = FALSE, rot.per=0.3, scale=c(4,.5), max.words = 101, colors = brewer.pal(8, "Dark2"))
title(main= "Word Cloud - Student Reviews", font.main = 1, cex.main = 1.5)
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 450,
title = list(text = "Speed"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 380),
gauge = list(
axis =list(range = list(NULL, 500)),
steps = list(
list(range = c(0, 250), color = "lightgray"),
list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "red", width = 4),
thickness = 0.75,
value = 490)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
install.packages('plotly')
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 450,
title = list(text = "Speed"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 380),
gauge = list(
axis =list(range = list(NULL, 500)),
steps = list(
list(range = c(0, 250), color = "lightgray"),
list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "red", width = 4),
thickness = 0.75,
value = 490)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 450,
title = list(text = "Speed"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 380),
gauge = list(
axis =list(range = list(NULL, 500)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "red", width = 4),
thickness = 0.75,
value = 490)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Speed"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "red", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "red", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "green", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
bar = list(color = "darkblue"),
gauge = list(
axis =list(range = list(NULL, 100)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
bar = list(color = "darkblue"),
gauge = list(
axis =list(range = list(NULL, 100)),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
bar = list(color = "darkblue"),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
bar = list(color = "yellow"),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
bar = list(color = "brown"),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
bar = list(color = "purple"),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "purple", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
library(plotly)
fig <- plot_ly(
domain = list(x = c(0, 1), y = c(0, 1)),
value = 65,
title = list(text = "Percentage of 'A' students"),
type = "indicator",
mode = "gauge+number+delta",
delta = list(reference = 54),
gauge = list(
axis =list(range = list(NULL, 100)),
bar = list(color = "purple"),
#steps = list(
# list(range = c(0, 250), color = "lightgray"),
#list(range = c(250, 400), color = "gray")),
threshold = list(
line = list(color = "green", width = 4),
thickness = 0.75,
value = 80)))
fig <- fig %>%
layout(margin = list(l=20,r=30))
fig
# Violin Plot
library(readxl)
getwd()
setwd('aa2/')
df <- read.csv('violin-data.csv')
head(df)
df <- read.csv('violin-data.csv')
# Violin Plot
library(ggplot2)
p <- ggplot(df, aes(x=Class, y=raisedhands)) +
geom_violin()
p
p <- ggplot(df, aes(x=Class, y=raisedhands)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
df <- subset(df, Class == 'H' & Class == 'L')
head(df)
df <- subset(df, Class == 'H' & Class == 'L')
p <- ggplot(df, aes(x=Class, y=raisedhands)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
df <- subset(df, Class == 'H' & Class == 'L'm select = c(raisedhands:Class))
df <- subset(df, Class == 'H' & Class == 'L', select = c(raisedhands:Class))
df
df <- subset(df, Class == "H" & Class == "L", select = c(raisedhands:Class))
df
df <- read.csv('violin-data.csv')
df <- subset(df, Class == "H" & Class == "L", select = c(raisedhands:Class))
df
df <- read.csv('violin-data.csv')
df <- subset(df, Class == "H" or Class == "L", select = c(raisedhands:Class))
df <- read.csv('violin-data.csv')
df <- subset(df, Class == "H" || Class == "L", select = c(raisedhands:Class))
df <- read.csv('violin-data.csv')
df <- subset(df, Class == "H" | Class == "L", select = c(raisedhands:Class))
df
p <- ggplot(df, aes(x=Class, y=raisedhands)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
p + scale_fill_brewer(palette="Blues") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
p + scale_fill_brewer(palette="Blues") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1) +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1) +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
fill ='white'
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill='#A4A4A4', color="darkred") +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class, fill = Class)) +
geom_violin(trim = FALSE, fill='#A4A4A4', color="darkred") +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class, fill = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') + theme_minimal()
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') + theme_minimal()
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white')
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') +
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + theme_classic()
+ scale_fill_brewer(palette="Dark2")
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') + theme_minimal()
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, color = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') + theme_classic()
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, fill = Class)) +
geom_violin(trim = FALSE, fill = Class) +
geom_boxplot(width = 0.1, fill ='white') + theme_classic()
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p <- ggplot(df, aes(x=Class, y=raisedhands, fill = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white')
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p + scale_fill_brewer(palette="Dark2") + theme_classic()
p  + theme_classic()
p  + scale_fill_brewer(palette="Blues") + theme_classic()
p  + scale_fill_brewer(palette="RdBu") + theme_classic()
p  + scale_fill_brewer(palette="Blues") + theme_classic()
p  + scale_fill_brewer(palette="Dark2") + theme_classic()
p  + theme_classic()
df <- df[df$Class == "H",] = "new_value"
data<-replace(df$Class, df$Class=="H", "High Performance Student")
df
df<-replace(df$Class, df$Class=="H", "High Performance Student")
df
df <- read.csv('violin-data.csv')
df <- subset(df, Class == "H" | Class == "L", select = c(raisedhands:Class))
df<-replace(df, df$Class=="H", "High Performance Student")
df <- read.csv('violin-data.csv')
df <- subset(df, Class == "H" | Class == "L", select = c(raisedhands:Class))
df$Class<-replace(df$Class, df$Class=="H", "High Performance Student")
df
df$Class<-replace(df$Class, df$Class=="L", "Low Performance Student")
df
p <- ggplot(df, aes(x=Class, y=raisedhands, fill = Class)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, fill ='white')
labs(title = 'Plot of raised hand by student', x = "Student Performance Level", y = "Rasied Hands")
p  + theme_classic()
